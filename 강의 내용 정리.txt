- Reactivity
==> Vue.js가 추구하는 사상(핵심기능)
==> 데이터가 변화를 vue에서 감지해서 화면에 반영
==> 화면 조작 API 제공

- 인스턴스
==> Vue를 개발할때 필수로 개발해야하는 단위
==> 실제로, 인스턴스 안에 추가함으로서 화면을 조작

- 컴포넌트
==> 화면의 영역을 구분하여 개발하는 방식
==> 프론트엔드 프레임워크에서 제일 중요한 개념
==> 코드의 재사용성을 줄임

- 컴포넌트 통신
==> 컴포넌트로 개발했을 때 데이터의 흐름을 제어하기 위한, 규칙을 제안, 데이터의 흐름을 예측
    - props
    ==> 상위에서 하위로 데이터를 내리는 것
    - event emit
    ==> 하위에서 상위로 이벤트를 올리는 것

- HTTP 통신 라이브러리 (axios)

- 템플릿 문법
==> 화면을 조작하기 위한 Vue의 문법
    - 데이터 바인딩
    ==> 데이터의 변화를 따라서 화면에 반영
    - 뷰 디렉티브
    ==> 화면을 조작하기 위해서 vue가 추가적으로 제공하는 문법
    ==> v-00

- Vue CLI
==> 프로젝트를 생성할 때 명령어를 이용해서 생성하는 방법(Command Line Interface)

- 싱글 파일 컴포넌트
